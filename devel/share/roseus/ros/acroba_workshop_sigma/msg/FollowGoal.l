;; Auto-generated. Do not edit!


(when (boundp 'acroba_workshop_sigma::FollowGoal)
  (if (not (find-package "ACROBA_WORKSHOP_SIGMA"))
    (make-package "ACROBA_WORKSHOP_SIGMA"))
  (shadow 'FollowGoal (find-package "ACROBA_WORKSHOP_SIGMA")))
(unless (find-package "ACROBA_WORKSHOP_SIGMA::FOLLOWGOAL")
  (make-package "ACROBA_WORKSHOP_SIGMA::FOLLOWGOAL"))

(in-package "ROS")
;;//! \htmlinclude FollowGoal.msg.html


(defclass acroba_workshop_sigma::FollowGoal
  :super ros::object
  :slots (_turtle_name _speed _distance _angle _isForward ))

(defmethod acroba_workshop_sigma::FollowGoal
  (:init
   (&key
    ((:turtle_name __turtle_name) "")
    ((:speed __speed) 0.0)
    ((:distance __distance) 0.0)
    ((:angle __angle) 0.0)
    ((:isForward __isForward) nil)
    )
   (send-super :init)
   (setq _turtle_name (string __turtle_name))
   (setq _speed (float __speed))
   (setq _distance (float __distance))
   (setq _angle (float __angle))
   (setq _isForward __isForward)
   self)
  (:turtle_name
   (&optional __turtle_name)
   (if __turtle_name (setq _turtle_name __turtle_name)) _turtle_name)
  (:speed
   (&optional __speed)
   (if __speed (setq _speed __speed)) _speed)
  (:distance
   (&optional __distance)
   (if __distance (setq _distance __distance)) _distance)
  (:angle
   (&optional __angle)
   (if __angle (setq _angle __angle)) _angle)
  (:isForward
   (&optional (__isForward :null))
   (if (not (eq __isForward :null)) (setq _isForward __isForward)) _isForward)
  (:serialization-length
   ()
   (+
    ;; string _turtle_name
    4 (length _turtle_name)
    ;; float32 _speed
    4
    ;; float32 _distance
    4
    ;; float32 _angle
    4
    ;; bool _isForward
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _turtle_name
       (write-long (length _turtle_name) s) (princ _turtle_name s)
     ;; float32 _speed
       (sys::poke _speed (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _distance
       (sys::poke _distance (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _angle
       (sys::poke _angle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _isForward
       (if _isForward (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _turtle_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _turtle_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _speed
     (setq _speed (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _distance
     (setq _distance (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _angle
     (setq _angle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _isForward
     (setq _isForward (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get acroba_workshop_sigma::FollowGoal :md5sum-) "5063b95f0bacef3cca474f3440a82c74")
(setf (get acroba_workshop_sigma::FollowGoal :datatype-) "acroba_workshop_sigma/FollowGoal")
(setf (get acroba_workshop_sigma::FollowGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Define goal's message
string turtle_name
float32 speed
float32 distance
float32 angle
bool isForward

")



(provide :acroba_workshop_sigma/FollowGoal "5063b95f0bacef3cca474f3440a82c74")


