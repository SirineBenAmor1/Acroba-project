;; Auto-generated. Do not edit!


(when (boundp 'acroba_workshop_sigma::Move2Goal)
  (if (not (find-package "ACROBA_WORKSHOP_SIGMA"))
    (make-package "ACROBA_WORKSHOP_SIGMA"))
  (shadow 'Move2Goal (find-package "ACROBA_WORKSHOP_SIGMA")))
(unless (find-package "ACROBA_WORKSHOP_SIGMA::MOVE2GOAL")
  (make-package "ACROBA_WORKSHOP_SIGMA::MOVE2GOAL"))

(in-package "ROS")
;;//! \htmlinclude Move2Goal.msg.html


(defclass acroba_workshop_sigma::Move2Goal
  :super ros::object
  :slots (_turtle_name _speed _turtle_to_follow _follow_distance ))

(defmethod acroba_workshop_sigma::Move2Goal
  (:init
   (&key
    ((:turtle_name __turtle_name) "")
    ((:speed __speed) 0.0)
    ((:turtle_to_follow __turtle_to_follow) "")
    ((:follow_distance __follow_distance) 0.0)
    )
   (send-super :init)
   (setq _turtle_name (string __turtle_name))
   (setq _speed (float __speed))
   (setq _turtle_to_follow (string __turtle_to_follow))
   (setq _follow_distance (float __follow_distance))
   self)
  (:turtle_name
   (&optional __turtle_name)
   (if __turtle_name (setq _turtle_name __turtle_name)) _turtle_name)
  (:speed
   (&optional __speed)
   (if __speed (setq _speed __speed)) _speed)
  (:turtle_to_follow
   (&optional __turtle_to_follow)
   (if __turtle_to_follow (setq _turtle_to_follow __turtle_to_follow)) _turtle_to_follow)
  (:follow_distance
   (&optional __follow_distance)
   (if __follow_distance (setq _follow_distance __follow_distance)) _follow_distance)
  (:serialization-length
   ()
   (+
    ;; string _turtle_name
    4 (length _turtle_name)
    ;; float32 _speed
    4
    ;; string _turtle_to_follow
    4 (length _turtle_to_follow)
    ;; float32 _follow_distance
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _turtle_name
       (write-long (length _turtle_name) s) (princ _turtle_name s)
     ;; float32 _speed
       (sys::poke _speed (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; string _turtle_to_follow
       (write-long (length _turtle_to_follow) s) (princ _turtle_to_follow s)
     ;; float32 _follow_distance
       (sys::poke _follow_distance (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _turtle_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _turtle_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _speed
     (setq _speed (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; string _turtle_to_follow
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _turtle_to_follow (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _follow_distance
     (setq _follow_distance (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get acroba_workshop_sigma::Move2Goal :md5sum-) "e4ce1b98da5af31f2ccce23c57ecbca1")
(setf (get acroba_workshop_sigma::Move2Goal :datatype-) "acroba_workshop_sigma/Move2Goal")
(setf (get acroba_workshop_sigma::Move2Goal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Define goal's message
string turtle_name
float32 speed
string turtle_to_follow  
float32 follow_distance  

")



(provide :acroba_workshop_sigma/Move2Goal "e4ce1b98da5af31f2ccce23c57ecbca1")


