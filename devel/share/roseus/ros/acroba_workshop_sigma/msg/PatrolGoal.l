;; Auto-generated. Do not edit!


(when (boundp 'acroba_workshop_sigma::PatrolGoal)
  (if (not (find-package "ACROBA_WORKSHOP_SIGMA"))
    (make-package "ACROBA_WORKSHOP_SIGMA"))
  (shadow 'PatrolGoal (find-package "ACROBA_WORKSHOP_SIGMA")))
(unless (find-package "ACROBA_WORKSHOP_SIGMA::PATROLGOAL")
  (make-package "ACROBA_WORKSHOP_SIGMA::PATROLGOAL"))

(in-package "ROS")
;;//! \htmlinclude PatrolGoal.msg.html


(defclass acroba_workshop_sigma::PatrolGoal
  :super ros::object
  :slots (_turtle_name _speed_move _distance _isForward _speed_rotate _degrees _isClockwise ))

(defmethod acroba_workshop_sigma::PatrolGoal
  (:init
   (&key
    ((:turtle_name __turtle_name) "")
    ((:speed_move __speed_move) 0.0)
    ((:distance __distance) 0.0)
    ((:isForward __isForward) nil)
    ((:speed_rotate __speed_rotate) 0.0)
    ((:degrees __degrees) 0.0)
    ((:isClockwise __isClockwise) nil)
    )
   (send-super :init)
   (setq _turtle_name (string __turtle_name))
   (setq _speed_move (float __speed_move))
   (setq _distance (float __distance))
   (setq _isForward __isForward)
   (setq _speed_rotate (float __speed_rotate))
   (setq _degrees (float __degrees))
   (setq _isClockwise __isClockwise)
   self)
  (:turtle_name
   (&optional __turtle_name)
   (if __turtle_name (setq _turtle_name __turtle_name)) _turtle_name)
  (:speed_move
   (&optional __speed_move)
   (if __speed_move (setq _speed_move __speed_move)) _speed_move)
  (:distance
   (&optional __distance)
   (if __distance (setq _distance __distance)) _distance)
  (:isForward
   (&optional (__isForward :null))
   (if (not (eq __isForward :null)) (setq _isForward __isForward)) _isForward)
  (:speed_rotate
   (&optional __speed_rotate)
   (if __speed_rotate (setq _speed_rotate __speed_rotate)) _speed_rotate)
  (:degrees
   (&optional __degrees)
   (if __degrees (setq _degrees __degrees)) _degrees)
  (:isClockwise
   (&optional (__isClockwise :null))
   (if (not (eq __isClockwise :null)) (setq _isClockwise __isClockwise)) _isClockwise)
  (:serialization-length
   ()
   (+
    ;; string _turtle_name
    4 (length _turtle_name)
    ;; float32 _speed_move
    4
    ;; float32 _distance
    4
    ;; bool _isForward
    1
    ;; float32 _speed_rotate
    4
    ;; float32 _degrees
    4
    ;; bool _isClockwise
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _turtle_name
       (write-long (length _turtle_name) s) (princ _turtle_name s)
     ;; float32 _speed_move
       (sys::poke _speed_move (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _distance
       (sys::poke _distance (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _isForward
       (if _isForward (write-byte -1 s) (write-byte 0 s))
     ;; float32 _speed_rotate
       (sys::poke _speed_rotate (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _degrees
       (sys::poke _degrees (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _isClockwise
       (if _isClockwise (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _turtle_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _turtle_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _speed_move
     (setq _speed_move (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _distance
     (setq _distance (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _isForward
     (setq _isForward (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32 _speed_rotate
     (setq _speed_rotate (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _degrees
     (setq _degrees (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _isClockwise
     (setq _isClockwise (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get acroba_workshop_sigma::PatrolGoal :md5sum-) "28f8b262499b05e0030c6536920d8221")
(setf (get acroba_workshop_sigma::PatrolGoal :datatype-) "acroba_workshop_sigma/PatrolGoal")
(setf (get acroba_workshop_sigma::PatrolGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define goal's message
string turtle_name
float32 speed_move
float32 distance
bool isForward
float32 speed_rotate
float32 degrees
bool isClockwise

")



(provide :acroba_workshop_sigma/PatrolGoal "28f8b262499b05e0030c6536920d8221")


